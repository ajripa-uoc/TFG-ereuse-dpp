# .github/workflows/docker-build-template.yml
name: Docker Build and Push Template

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Name of the Docker image'
        required: true
        type: string
      context_path:
        description: 'Path to the Docker context'
        required: true
        type: string
      dockerfile_path:
        description: 'Path to the Dockerfile'
        required: true
        type: string
      push_enabled:
        description: 'Whether to push the image'
        required: false
        type: boolean
        default: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create tag based on the current timestamp
        id: tag-timestamp
        run: echo "image_tag=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context_path }}
          file: ${{ inputs.dockerfile_path }}
          push: ${{ inputs.push_enabled }}
          tags: ${{ steps.tag-timestamp.outputs.image_tag }},${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max