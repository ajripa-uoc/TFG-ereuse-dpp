services:
  id_index_api:
    init: true
    build:
      context: ./idIndexApi/
      dockerfile: ./Dockerfile
    container_name: id_index_api
    ports:
      - "3012:3012"
    restart: always
    volumes:
      - ${id_index_api__vol__data:-id_index_api__data}:/home/node/idIndexApi/data:rw
      - ${id_index_api__vol__src:-id_index_api__src}:/home/node/idIndexApi/src:ro
    networks:
      - ereuse

  blockchain_test_node:
    init: true
    # TODO I hope this is fine
    #   Allows 2 seconds for the container to gracefully shut down (by default is 10, and it always take 10)
    stop_grace_period: 2s
    build:
      context: ./
      dockerfile: ./Dockerfile_blockchain_test_node
    container_name: blockchain_test_node
    ports:
      # we saw this is sometimes attacked, that's why it is not globally exposed
      #- "127.0.0.1:8545:8545"
      - "8545:8545"
    restart: always
    networks:
      - ereuse

  # ereuse-dpp-api
  api_connector:
    init: true
    build: ./
    depends_on:
      - id_index_api
      - blockchain_test_node
      - veramo_api
    container_name: api_connector
    ports:
      - "3010:3010"
    restart: always
    volumes:
      - ${api_connector__vol__src:-api_connector__api_src}:/home/node/app/src:rw
      - ${api_connector__vol__shared:-./shared}:/home/node/app/shared:rw
      - ./.env:/home/node/app/.env:ro
      - ./hardhat-artifacts:/home/node/app/artifacts
      - ./hardhat-cache:/home/node/app/cache
    # TODO this is somehow redundant or not much consistent with shared volume
    # if this exist, writes api-connector_admin-token.txt file to shared path
    environment:
      - SHARED=./shared
    networks:
      - ereuse

  did_resolver:
    init: true
    build:
      context: ./
      dockerfile: ./didResolverApi/Dockerfile
    container_name: did_resolver
    ports:
      - "3011:3011"
    restart: always
    volumes:
      - ${did_resolver__vol__api_src:-did_resolver__api_src}:/home/node/didResolverAPI/src:rw
      - ${did_resolver__vol__module_src:-did_resolver__module_src}:/home/node/didResolverModule/src:rw
      - ./.env:/home/node/didResolverAPI/src/.env:ro
    networks:
      - ereuse

  dpp_indexer:
    init: true
    build:
      context: ./
      dockerfile: ./observerModule/Dockerfile
    depends_on:
      - api_connector
    container_name: dpp_indexer # name of the built image
    environment:
      - HTTP_PORT=3014
    ports:
      - "3014:3014"
    restart: always
    volumes:
      - ${dpp_indexer__vol__data:-dpp_indexer__data}:/home/node/observerModule/data:rw
      - ${dpp_indexer__vol__src:-dpp_indexer__src}:/home/node/observerModule/src:ro
      - ${dpp_indexer__vol__shared:-./shared}:/home/node/observerModule/shared:rw
      - ./.env:/home/node/observerModule/src/.env:ro
    networks:
      - ereuse

  veramo_api:
    init: true
    build:
      context: ./veramoApi
      dockerfile: ./Dockerfile
    container_name: veramo_api # name of the built image
    ports:
      - "3016:3016"
    restart: always
    volumes:
      - ${veramo_api__vol__src:-veramo_api__src}:/home/node/veramoApi/src:rw
      - ${veramo_api__vol__shared:-./shared}:/home/node/veramoApi/shared:rw
    networks:
      - ereuse

  create-operator-user:
    init: true
    build:
      context: ./create-operator-user
      dockerfile: ./Dockerfile
    container_name: create-operator-user
    depends_on:
      - api_connector
      - veramo_api
    volumes:
      - ${create_operator_user__vol__src:-create_operator_user__src}:/home/node/app/scripts:rw
      - ${create_operator_user__vol__shared:-./shared}:/home/node/app/shared:rw
    networks:
      - ereuse

  devicehub-teal:
    # TODO custom entrypoint devicehub-teal
    init: true
    depends_on:
      - create-operator-user
      - id_index_api
    build:
      context: ./devicehub-teal/
      dockerfile: ./docker/devicehub.Dockerfile
    environment:
      - DB_USER=${DH__DB_USER}
      - DB_PASSWORD=${DH__DB_PASSWORD}
      - DB_HOST=postgres-devicehub-teal
      - DB_DATABASE=${DH__DB_DATABASE}
      - HOST=${DH__HOST}
      - EMAIL_DEMO=${DH__SERVER_ID_EMAIL_DEMO}
      - PASSWORD_DEMO=${DH__PASSWORD_DEMO}
      - JWT_PASS=${DH__JWT_PASS}
      - SECRET_KEY=${DH__SECRET_KEY}
      - DEVICEHUB_HOST=${DH__SERVER_ID_DEVICEHUB_HOST}
      # TODO hardcoded in entrypoint
      # - ID_FEDERATED=
      - DPP_MODULE=y
      - DPP_SHARED=/shared
      - IMPORT_SNAPSHOTS=${DH__IMPORT_SNAPSHOTS}
    ports:
      - 5000:5000
    volumes:
      - ${SNAPSHOTS_PATH:-./devicehub-teal/examples/snapshots}:/mnt/snapshots:ro
      - ${devicehub_teal__vol__shared:-./shared}:/shared:rw
    networks:
      - ereuse

  postgres-devicehub-teal:
    build:
      context: ./devicehub-teal/
      dockerfile: ./docker/postgres.Dockerfile
    # 4. To create the database.
    # 5. Give permissions to the corresponding users in the database.
    #   extra src https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
    environment:
      - POSTGRES_PASSWORD=${DH__DB_PASSWORD}
      - POSTGRES_USER=${DH__DB_USER}
      - POSTGRES_DB=${DH__DB_DATABASE}
    # DEBUG
    #ports:
    #  - 5432:5432
    # TODO persistence
    #volumes:
    #  - pg_data:/var/lib/postgresql/data
    networks:
      - ereuse


networks:
    ereuse:
      driver: bridge

volumes:
  shared:
  id_index_api__data:
  id_index_api__src:
  api_connector__api_src:
  did_resolver__api_src:
  did_resolver__module_src:
  dpp_indexer__data:
  dpp_indexer__src:
  veramo_api__src:
  create_operator_user__src:
