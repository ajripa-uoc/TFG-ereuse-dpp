# Default values for tfg-ereuse-dpp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Global configuration for all resources
global:
  imagePullPolicy: Always

  sharedStorage:
    name: shared-storage
    className: efs

  domain: ""

# Environment variables used by the application
# They are stored in a ConfigMap and accessed by the application
config:
  ETH_CLIENT: besu
  ETH_PRIV_KEY: 807118c237e01677f0522f9ca50535b1984481ea2e09115197934a9cd73ab8c1
  CHAIN_ID: 457
  ID_FEDERATED: DH1
  API_DLT_TOKEN: zD9KXy1UaKCL3IL.8E7r5EQejlwhKydGdkPPGUvD1EKHf7q1uR5ENTAcE8jjoSehOOkxwcov4nzta349

# id-index-api
idIndexApi:
  replicaCount: 1
  name: id-index-api
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/id-index-api"
    tag: "latest"

  healthcheck:
    path: /healthz

  service:
    type: ClusterIP
    port: 3012

# blockchain-node
blockchainNode:
  replicaCount: 1
  name: blockchain-node
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/blockchain-node"
    tag: "latest"

  service:
    type: ClusterIP
    port: 8545

  config:
    MINING_INTERVAL: 1000

# api-connector
apiConnector:
  replicaCount: 1
  name: api-connector
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/api-connector"
    tag: "latest"

  healthcheck:
    path: /

  service:
    type: ClusterIP
    port: 3010

  sharedStorage:
    mountPath: /home/node/app/shared

# veramo-api
veramoApi:
  replicaCount: 1
  name: veramo-api
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/veramo-api"
    tag: "latest"

  healthcheck:
    path: /healthz

  service:
    type: ClusterIP
    port: 3016

  sharedStorage:
    mountPath: /home/node/veramoApi/shared

# did-resolver
didResolver:
  replicaCount: 1
  name: did-resolver
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/did-resolver"
    tag: "latest"

  healthcheck:
    path: /

  service:
    type: ClusterIP
    port: 3011

# dpp-indexer
dppIndexer:
  replicaCount: 1
  name: dpp-indexer
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/dpp-indexer"
    tag: "latest"

  healthcheck:
    path: /healthz

  service:
    type: ClusterIP
    port: 3014

  sharedStorage:
    mountPath: /home/node/observerModule/shared

# devicehub
devicehub:
  replicaCount: 1
  name: devicehub
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/devicehub-django"
    tag: "latest"

  config:
    # Rest of the config is in the configmap.
    # The APIs urls are build from the fullname of the release and the name of the service.
    DEBUG: true
    DEMO: false
    DPP_MODULE: n
    DPP_SHARED: /shared
    INIT_ORG: example-org
    INIT_USER: user@example.org
    INIT_PASSWD: 1234

  healthcheck:
    path: /login/

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  sharedStorage:
    mountPath: /shared

# search
search:
  replicaCount: 1
  name: search
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/search"
    tag: "latest"

  config:
    # Rest of the config is in the configmap.
    # The APIs urls are build from the fullname of the release and the name of the service.
    DISABLE_ESLINT_PLUGIN: true
    # This value is set in the operator-token.txt file in the shared volume.
    #REACT_APP_CONNECTOR_API_TOKEN: "Aw0nnxI8mJ81TiY.jDCsrUlUjh9w1T4O44HcEFGNOkZ3gWCjFGb7czaJliZqWXPaWJXyP0ADTwZ8M8gE"

  healthcheck:
    path: /

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  sharedStorage:
    mountPath: /home/node/searchEngine/shared

# create-operator-user
createOperatorUser:
  replicaCount: 1
  name: create-operator-user
  image:
    repository: "ghcr.io/ajripa-uoc/tfg-ereuse-dpp/create-operator-user"
    tag: "latest"

  sharedStorage:
    mountPath: /home/node/app/shared
